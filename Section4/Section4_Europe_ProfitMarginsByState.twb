<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='OrderBreakdown+ (P1-AmazingMartEU2)' inline='true' name='federated.1qpa40m0yv1g7m1clwx8s0icu18z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='P1-AmazingMartEU2' name='excel-direct.1p3q1u21972u7l12i4qk217eg8br'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/628303/Desktop/tableau2022/Section4/P1-AmazingMartEU2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[OrderBreakdown].[Order ID]' />
              <expression op='[ListOfOrders].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1p3q1u21972u7l12i4qk217eg8br' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
          <relation connection='excel-direct.1p3q1u21972u7l12i4qk217eg8br' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='date' name='Ship Date' ordinal='7' />
              <column datatype='string' name='Ship Mode' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[OrderBreakdown].[Order ID]' />
              <expression op='[ListOfOrders].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1p3q1u21972u7l12i4qk217eg8br' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
          <relation connection='excel-direct.1p3q1u21972u7l12i4qk217eg8br' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='date' name='Ship Date' ordinal='7' />
              <column datatype='string' name='Ship Mode' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[OrderBreakdown].[Category]' />
          <map key='[City]' value='[ListOfOrders].[City]' />
          <map key='[Country]' value='[ListOfOrders].[Country]' />
          <map key='[Customer Name]' value='[ListOfOrders].[Customer Name]' />
          <map key='[Discount]' value='[OrderBreakdown].[Discount]' />
          <map key='[Order Date]' value='[ListOfOrders].[Order Date]' />
          <map key='[Order ID (ListOfOrders)]' value='[ListOfOrders].[Order ID]' />
          <map key='[Order ID]' value='[OrderBreakdown].[Order ID]' />
          <map key='[Product Name]' value='[OrderBreakdown].[Product Name]' />
          <map key='[Profit]' value='[OrderBreakdown].[Profit]' />
          <map key='[Quantity]' value='[OrderBreakdown].[Quantity]' />
          <map key='[Region]' value='[ListOfOrders].[Region]' />
          <map key='[Sales]' value='[OrderBreakdown].[Sales]' />
          <map key='[Segment]' value='[ListOfOrders].[Segment]' />
          <map key='[Ship Date]' value='[ListOfOrders].[Ship Date]' />
          <map key='[Ship Mode]' value='[ListOfOrders].[Ship Mode]' />
          <map key='[State]' value='[ListOfOrders].[State]' />
          <map key='[Sub-Category]' value='[OrderBreakdown].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H8048:no:A1:H8048:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J4118:no:A1:J4118:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (ListOfOrders)]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Margin' datatype='real' name='[Calculation_237283430650265600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='OrderBreakdown' datatype='table' name='[__tableau_internal_object_id__].[OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Geography'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Calculation_237283430650265600' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Order ID (ListOfOrders)' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='OrderBreakdown' id='OrderBreakdown_D11267CEC8A04E7ABEEE5D0C4BF9230B'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[OrderBreakdown].[Order ID]' />
                    <expression op='[ListOfOrders].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.1p3q1u21972u7l12i4qk217eg8br' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
                  <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='string' name='Product Name' ordinal='1' />
                    <column datatype='real' name='Discount' ordinal='2' />
                    <column datatype='integer' name='Sales' ordinal='3' />
                    <column datatype='integer' name='Profit' ordinal='4' />
                    <column datatype='integer' name='Quantity' ordinal='5' />
                    <column datatype='string' name='Category' ordinal='6' />
                    <column datatype='string' name='Sub-Category' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1p3q1u21972u7l12i4qk217eg8br' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
                  <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='date' name='Order Date' ordinal='1' />
                    <column datatype='string' name='Customer Name' ordinal='2' />
                    <column datatype='string' name='City' ordinal='3' />
                    <column datatype='string' name='Country' ordinal='4' />
                    <column datatype='string' name='Region' ordinal='5' />
                    <column datatype='string' name='Segment' ordinal='6' />
                    <column datatype='date' name='Ship Date' ordinal='7' />
                    <column datatype='string' name='Ship Mode' ordinal='8' />
                    <column datatype='string' name='State' ordinal='9' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1qpa40m0yv1g7m1clwx8s0icu18z'>
      <datasources>
        <datasource caption='OrderBreakdown+ (P1-AmazingMartEU2)' name='federated.1qpa40m0yv1g7m1clwx8s0icu18z' />
      </datasources>
      <datasource-dependencies datasource='federated.1qpa40m0yv1g7m1clwx8s0icu18z'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[yr:Order Date:ok]'>
        <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map of Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='OrderBreakdown+ (P1-AmazingMartEU2)' name='federated.1qpa40m0yv1g7m1clwx8s0icu18z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qpa40m0yv1g7m1clwx8s0icu18z'>
            <column caption='Profit Margin' datatype='real' name='[Calculation_237283430650265600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_237283430650265600]' derivation='User' name='[usr:Calculation_237283430650265600:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[sum:Sales:qk]' included-values='in-range'>
            <min>27</min>
            <max>94734</max>
          </filter>
          <slices>
            <column>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[yr:Order Date:ok]</column>
            <column>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[Longitude (generated)]' field-type='quantitative' max='4257437.9903398976' min='-1937235.0299224234' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[Latitude (generated)]' field-type='quantitative' max='8006601.6965461653' min='4462816.1937059164' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[usr:Calculation_237283430650265600:qk]' max='0.5' min='-0.5' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[usr:Calculation_237283430650265600:qk]' />
              <size column='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[sum:Sales:qk]' />
              <lod column='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[none:Country:nk]' />
              <lod column='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9502761363983154' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[Latitude (generated)]</rows>
        <cols>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4EBEB4CD-5051-42D0-895D-8896AD4B2066}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Custom Scatter Plot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='OrderBreakdown+ (P1-AmazingMartEU2)' name='federated.1qpa40m0yv1g7m1clwx8s0icu18z' />
          </datasources>
          <datasource-dependencies datasource='federated.1qpa40m0yv1g7m1clwx8s0icu18z'>
            <column caption='Profit Margin' datatype='real' name='[Calculation_237283430650265600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_237283430650265600]' derivation='User' name='[usr:Calculation_237283430650265600:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[usr:Calculation_237283430650265600:qk]' />
              <lod column='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[none:Customer Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[sum:Profit:qk]</rows>
        <cols>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{5C92B773-FA38-4200-BD67-70C8071F94C7}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[yr:Order Date:ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[usr:Calculation_237283430650265600:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{621CE9D6-CF09-4208-9FC9-A5D5AFACEF0B}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[usr:Calculation_237283430650265600:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qpa40m0yv1g7m1clwx8s0icu18z].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A580DCA5-F4E9-4AB6-9FB6-918C85A28D07}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='288' name='Sheet 1' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='Sheet 2' width='288'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
